{"version":3,"sources":["notifications/websocket.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,kDAAkD;AAElD,2BAAyB,iBAAiB,CAAC,CAAA;AAE3C,IAAY,EAAE,WAAM,kBAAkB,CAAC,CAAA;AAGvC;IAEI;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,YAAU,MAAM,CAAC,QAAQ,CAAC,QAAQ,SAAI,MAAM,CAAC,QAAQ,CAAC,IAAM,CAAC,CAAC;QACnF,CAAC;IACL,CAAC;IAED,0CAAe,GAAf,UAAgB,OAAY;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAOC;QANG,MAAM,CAAC,IAAI,uBAAU,CAAC,UAAC,QAAa;YAChC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,IAAS;gBAChC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAxB,CAAwB,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAe,GAAf;QAAA,iBAQC;QAPG,8DAA8D;QAC9D,MAAM,CAAC,IAAI,uBAAU,CAAC,UAAC,QAAa;YAChC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAS;gBAC7B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAxB,CAAwB,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IA9BL;QAAC,iBAAU,EAAE;;wBAAA;IA+Bb,uBAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,wBAAgB,mBA8B5B,CAAA","file":"websocket.service.js","sourcesContent":["import { Injectable } from '@angular/core';\n// import {Â Http, Response } from '@angular/http';\n\nimport {Observable} from 'rxjs/Observable';\n\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class WebSocketService {\n    private socket: SocketIOClient.Socket;\n    constructor() {\n        if (!this.socket) {\n            this.socket = io(`http://${window.location.hostname}:${window.location.port}`);\n        }\n    }\n\n    sendChatMessage(message: any) {\n        this.socket.emit('chat', message);\n    }\n\n    getPlayersMessages(): Observable<any> {\n        return new Observable((observer: any) => {\n            this.socket.on('players', (data: any) => {\n                observer.next(data);\n            });\n            return () => this.socket.disconnect();\n        });\n    }\n\n    getChatMessages(): Observable<any> {\n        // TODO: study the getPlayersMessages to implement this method\n        return new Observable((observer: any) => {\n            this.socket.on('chat', (data: any) => {\n                observer.next(data);\n            });\n            return () => this.socket.disconnect();\n        });\n    }\n}\n"],"sourceRoot":"/angular/app"}